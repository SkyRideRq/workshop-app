{"version":3,"sources":["components/main/main.js","components/subtable/subtable.js","components/nav/nav.js","components/editor/editor.js","components/help/help.js","App.js","serviceWorker.js","index.js"],"names":["Main","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","e","results","state","data","filter","r","name","toLowerCase","indexOf","target","value","setState","result","_this2","fetch","then","resp","json","obj","_this3","datalist","length","map","react_default","a","createElement","key","id","style","width","Link","className","to","model","serialNumber","placeholder","ref","input","search","onChange","searchValue","Component","Subtable","service","formStyle","display","handleSubmit","preventDefault","props","match","params","post_id","fields","Array","prototype","slice","el","reduce","form","objectSpread","defineProperty","randomID","Math","random","toString","substr","push","dataToSend","JSON","stringify","headers","Accept","Content-Type","method","body","handleChange","event","description","parts","cost","inputDate","outputDate","handleClick","console","log","position","top","left","zIndex","padding","maxHeight","handleClickEdit","refs","i","onClick","onSubmit","float","type","required","htmlFor","Nav","href","NavLink","Editor","newData","Help","App","BrowserRouter","nav","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dea1931b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport \"react-table/react-table.css\";\r\nimport { Link } from 'react-router-dom'\r\nclass Main extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data:[],\r\n            result:[]\r\n        };\r\n    }\r\n   \r\n    handleInputChange = (e) => {\r\n        let results = this.state.data.filter(r=>{\r\n            return (r.name.toLowerCase().indexOf(e.target.value.toLowerCase())!== -1 ? (\r\n                r\r\n            ):(null))\r\n        })\r\n        this.setState({\r\n            result: results\r\n        })\r\n    }\r\n\r\n    componentWillMount() {\r\n        fetch(\"http://localhost:3000/user\").then( resp => {\r\n            return resp.json();\r\n        }).then( obj => {\r\n            this.setState({ \r\n                data: obj,\r\n                result:obj\r\n            });\r\n        });\r\n    }\r\n      \r\n    render () {\r\n        const  data  = this.state.result;\r\n        const datalist = data.length ? (\r\n            data.map(e=>{\r\n                return (\r\n                    <tr key={e.id}>\r\n                        <td style={{\"width\":\"10%\"}}>\r\n                            <Link\r\n                            className=\"btn\" \r\n                            to={'/'+ e.id}>\r\n                                Szczegóły\r\n                            </Link>\r\n                        </td>\r\n                        <td>{e.name}</td>\r\n                        <td>{e.model}</td>\r\n                        <td>{e.serialNumber}</td>\r\n                    </tr>\r\n                )\r\n            })\r\n            ) : (<tr className=\"center\"><td>Brak danych</td></tr>)\r\n        return (\r\n            <div className=\"container flex\">\r\n                <input\r\n                    placeholder=\"Szukaj...\"\r\n                    ref={input => this.search = input}\r\n                    onChange={this.handleInputChange}\r\n                />\r\n                <p>{this.state.searchValue}</p>\r\n                <div>\r\n                    <table className=\"highlight centered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>Imię i nazwisko</th>\r\n                                <th>Model</th>\r\n                                <th>Nr. Seryjny</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {datalist}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Main;","import React, { Component } from 'react';\r\n\r\n\r\nclass Subtable extends Component {\r\n    state = {\r\n        data: [],\r\n        service:[],\r\n        formStyle:{\r\n            \"display\":\"none\"\r\n        }\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let id = this.props.match.params.post_id;\r\n        let fields = Array.prototype.slice.call(e.target)\r\n            .filter(el => el.name)\r\n            .reduce((form, el) => ({\r\n                ...form,\r\n                [el.name]: el.value,\r\n            }), {});\r\n        const randomID= Math.random().toString(36).substr(2, 9)\r\n        fields.id = randomID\r\n        this.state.data.service.push(fields)\r\n        const dataToSend =JSON.stringify(this.state.data)\r\n            fetch('http://localhost:3000/user/'+id+ '/', {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'PUT',\r\n                body: dataToSend\r\n            });\r\n        this.setState({\r\n            formStyle: {\r\n                \"display\" :\"none\"\r\n            },\r\n        })\r\n    }\r\n    handleChange = (event) => {\r\n        event.preventDefault()\r\n        if (event.target.name === \"name\")\r\n            this.setState({ name: event.target.value});\r\n        if (event.target.name === \"model\")\r\n             this.setState({ model: event.target.value});\r\n        if (event.target.name === \"serialNumber\")\r\n            this.setState({ serialNumber: event.target.value});\r\n        if (event.target.name === \"description\")\r\n            this.setState({description: event.target.value});\r\n        if (event.target.name === \"parts\")\r\n            this.setState({ parts: event.target.value});\r\n        if (event.target.name === \"cost\")\r\n            this.setState({cost: event.target.value });\r\n        if (event.target.name === \"inputDate\")\r\n            this.setState({inputDate: event.target.value});\r\n        if (event.target.name === \"outputDate\")\r\n            this.setState({outputDate: event.target.value});\r\n    };\r\n    handleClick = () => {\r\n        console.log('PROPS ',this.props)\r\n        this.state.formStyle.display === \"none\" ? (\r\n            this.setState({\r\n                formStyle: {\r\n                    \"display\" :\"block\",\r\n                    \"position\":\"fixed\",\r\n                    \"top\":\"2rem\",\r\n                    \"left\": \"0\",\r\n                    \"zIndex\": \"99999\",\r\n                    \"padding\":\"30px\",\r\n                    \"maxHeight\":\"100%\"\r\n                }\r\n            })\r\n        ): (\r\n            this.setState({\r\n                formStyle: {\r\n                    \"display\" :\"none\"\r\n                }\r\n            })\r\n        )\r\n    }\r\n    handleClickEdit = (e) => {\r\n        console.log(e.refs)\r\n        \r\n    }\r\n    componentWillMount() {\r\n        \r\n        let id = this.props.match.params.post_id;\r\n        fetch(\"http://localhost:3000/user/\"+id).then( resp => {\r\n            return resp.json();\r\n        }).then( obj => {\r\n            this.setState({ \r\n                data: obj,\r\n                service:obj.service\r\n            });\r\n        });\r\n    }\r\n    render () {\r\n        const data = this.state.data ? (\r\n            <div>\r\n                <h4 className=\"center\">{this.state.data.name} {this.state.data.model} {this.state.data.serialNumber}</h4>\r\n            </div>\r\n        ) : (<h1 className=\"center\">Wczytywanie...</h1>)\r\n        const datalist = this.state.service.length ? (\r\n            this.state.service.map((e, i)=>{\r\n                \r\n                return (\r\n                    <tr key={e.id} onClick={this.handleClickEdit}>\r\n                        <td>\r\n                            <button\r\n                                onClick={this.handleClickEdit}\r\n                                className='waves-effect waves-light btn'\r\n                            >Edytuj</button>\r\n                        </td>\r\n                        {/* <td>\r\n                            {\r\n                        (e.editable)?\r\n                            (<input type=\"text\" className=\"form-control\" id={e.id} defaultValue={e.contents} onChange={(e) => {\r\n                                this.props.handleChangeEvent(e.target.value, i)\r\n                            }} /> ): (<div onClick={onCellClick(i){}}>{el.contents}</div>)}</td> */}\r\n                        <td>{e.description}</td>\r\n                        <td>{e.parts}</td>\r\n                        <td>{e.cost}</td>\r\n                        <td>{e.inputDate}</td>\r\n                        <td>{e.outputDate}</td>\r\n                        \r\n                    </tr>\r\n                )\r\n            })\r\n            ) : (<tr className=\"center\"><td>Brak danych</td></tr>)\r\n        return (\r\n            <div className=\"container center\">\r\n                {data}\r\n                <button className='waves-effect waves-light btn' onClick={this.handleClick}>Dodaj nową naprawę</button>\r\n                <div className='modal' style={this.state.formStyle}>\r\n                    <form  onSubmit={this.handleSubmit}>\r\n                        <div >\r\n                            <button className=\"btn\" style={{\r\n                            \"float\":\"right\",\r\n                            \"top\" : \"0\",\r\n                            \"zIndex\":\"9999999\"\r\n                            }}onClick={this.handleClick}>X</button>\r\n                        </div>\r\n                        <h6>Dodaj nowy wpis</h6>\r\n                        <div className=\"input-field\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"description\"\r\n                                value={this.state.service.description}\r\n                                onChange={this.handleChange}\r\n                                required\r\n                            />\r\n                            <label htmlFor=\"description\">Opis:</label>\r\n                        </div>\r\n\r\n                        <div className=\"input-field\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"parts\"\r\n                                value={this.state.service.parts}\r\n                                onChange={this.handleChange}\r\n                                required\r\n                            />\r\n                            <label htmlFor=\"parts\">Części:</label>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"cost\"\r\n                                value={this.state.service.cost}\r\n                                onChange={this.handleChange}\r\n                                required\r\n                            />\r\n                            <label htmlFor=\"cost\">Koszt:</label>\r\n                        </div>\r\n                        \r\n                        <div className=\"input-field\">\r\n                            <input\r\n                                type=\"date\"\r\n                                name=\"inputDate\"\r\n                                value={this.state.service.inputDate}\r\n                                onChange={this.handleChange}\r\n                                required\r\n                            />\r\n                            <label htmlFor=\"inputDate\">Data przyjęcia:</label>\r\n                        </div>\r\n                        \r\n                        <div className=\"input-field\">\r\n                            <input\r\n                                type=\"date\"\r\n                                name=\"outputDate\"\r\n                                value={this.state.service.outputDate}\r\n                                onChange={this.handleChange}\r\n                                required\r\n                            />\r\n                            <label htmlFor=\"outputDate\">Data wydania:</label>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <input className=\"btn\" type=\"submit\" value=\"Dodaj\" />\r\n                        </div>\r\n                        \r\n                    </form>\r\n                </div>\r\n                <table className=\"striped highlight\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Opis</th>\r\n                            <th>Cześci</th>\r\n                            <th>Koszt</th>\r\n                            <th>Data przyjęcia</th>\r\n                            <th>Data wydania</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {datalist}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Subtable","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <div className=\"navbar-fixed\">\r\n            <nav className=\"nav-wrapper blue darken-3\">\r\n                <div className=\"container\">\r\n                    <a href=\"/\" className=\"brand-logo\">Logo-place</a>\r\n                    <ul className=\"right\">\r\n                        <li><NavLink to=\"/\">Baza główna</NavLink></li>\r\n                        <li><NavLink to=\"/editor\">Dodaj sprzęt</NavLink></li>\r\n                        <li><NavLink to=\"/help\">Pomoc</NavLink></li>\r\n                    </ul>  \r\n                </div>\r\n            </nav>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default Nav","import React, { Component } from 'react';\r\n\r\nclass Editor extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data:[],\r\n            name: \"\",\r\n            model: \"\",\r\n            serialNumber: \"\",\r\n            description:\"\",\r\n            parts:\"\",\r\n            cost:\"\",\r\n            inputDate:\"\",\r\n            outputDate:\"\",\r\n            service:[{\r\n            \r\n            }]\r\n        };\r\n    }\r\n    handleChange = (event) => {\r\n        event.preventDefault()\r\n        if (event.target.name === \"name\")\r\n            this.setState({ name: event.target.value});\r\n        if (event.target.name === \"model\")\r\n             this.setState({ model: event.target.value});\r\n        if (event.target.name === \"serialNumber\")\r\n            this.setState({ serialNumber: event.target.value});\r\n        if (event.target.name === \"description\")\r\n            this.setState({description: event.target.value});\r\n        if (event.target.name === \"parts\")\r\n            this.setState({ parts: event.target.value});\r\n        if (event.target.name === \"cost\")\r\n            this.setState({cost: event.target.value });\r\n        if (event.target.name === \"inputDate\")\r\n            this.setState({inputDate: event.target.value});\r\n        if (event.target.name === \"outputDate\")\r\n            this.setState({outputDate: event.target.value});\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const fields = Array.prototype.slice.call(e.target)\r\n            .filter(el => el.name)\r\n            .reduce((form, el) => ({\r\n                ...form,\r\n                [el.name]: el.value,\r\n            }), {});\r\n        console.log(fields)\r\n        fields.service= []\r\n        console.log(fields)\r\n        const randomID= Math.random().toString(36).substr(2, 9)\r\n        console.log(randomID)\r\n        fields.id = randomID\r\n        const newData = this.state.data\r\n        newData.push(fields)\r\n        this.setState({ \r\n            data: newData ,\r\n            name: \"\",\r\n            model: \"\",\r\n            serialNumber: \"\",\r\n            description:\"\",\r\n            parts:\"\",\r\n            cost:\"\",\r\n            inputDate:\"\",\r\n            outputDate:\"\", \r\n            service:[{\r\n            }]\r\n        });\r\n        const dataToSend =JSON.stringify(fields)\r\n        fetch('http://localhost:3000/user', {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: dataToSend\r\n        })\r\n    };\r\n    render () {\r\n        return (\r\n            <div className=\"container center\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h3>Dodaj nowy sprzęt</h3>\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={this.state.name}\r\n                                onChange={this.handleChange}\r\n                                id=\"name\"\r\n                                required\r\n                                />\r\n                            <label htmlFor=\"name\">Imię i nazwisko właściciela</label>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"model\"\r\n                                value={this.state.model}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <label htmlFor=\"model\">Model:</label>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"serialNumber\"\r\n                                value={this.state.serialNumber}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <label htmlFor=\"serialNumber\">Nr. Seryjny:</label>\r\n                        </div>\r\n                    <input type=\"submit\" value=\"Dodaj\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Editor;","import React from 'react';\r\n\r\n\r\nconst Help = () => {\r\n    return (\r\n        <div className=\"center\">\r\n            <h1>Pomoc - placeholder</h1>\r\n        </div>\r\n    )\r\n}\r\nexport default Help","import React, { Component } from \"react\";\nimport Main from \"./components/main/main\"\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Subtable from \"./components/subtable/subtable\"\nimport Nav from './components/nav/nav';\nimport Editor from './components/editor/editor';\nimport Help from './components/help/help';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Nav/>\n          <Switch>\n            <Route exact path='/' component={Main}/>\n            <Route exact path='/editor' component={Editor}/>\n            <Route exact path='/help' component={Help}/>\n            <Route exact path='/:post_id' component={Subtable}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}